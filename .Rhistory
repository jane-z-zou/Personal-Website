df <- df %>% filter(PATIENT_ID %in% jf$PATIENT_ID) %>% distinct()
library(lubridate)
df$VISIT_DATE <- parse_date_time(df$VISIT_DATE, "mdy")
df <- df %>% select(PATIENT_ID, VISIT_DATE, EYE, MD) %>% distinct()
df <- df %>% group_by(PATIENT_ID, EYE) %>% mutate(BASELINE = min(VISIT_DATE), FINAL = max(VISIT_DATE))
df$MD <- as.numeric(df$MD)
df <- df %>% group_by(PATIENT_ID) %>% mutate(EYES = n_distinct(EYE)) %>% filter(EYES == 2) %>% select(-EYES)
r_base <- df %>% filter(EYE == "RE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
l_base <- df %>% filter(EYE == "LE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
r_final <- df %>% filter(EYE == "RE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
l_final <- df %>% filter(EYE == "LE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
colnames(r_base)[2] <- "BASELINE"
colnames(l_base)[2] <- "BASELINE"
colnames(r_final)[2] <- "FINAL"
colnames(l_final)[2] <- "FINAL"
right <- merge(r_base, r_final) %>% distinct()
left <- merge(l_base, l_final) %>% distinct()
library(ggplot2)
ggplot(data = right, aes(x = BASELINE, y = FINAL)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(x = "Average Baseline MD", y = "Average Final MD", title = "Scatterplot of Average Final vs Average \n Baseline MD, Right Eye") +
theme_minimal() +
scale_x_continuous(name = "Average Baseline MD", limits = c(NA, NA), breaks = seq(min(right$BASELINE, right$FINAL, na.rm = TRUE), max(right$BASELINE, right$FINAL, na.rm = TRUE), by = 5)) +
scale_y_continuous(name = "Average Final MD", limits = c(NA, NA), breaks = seq(min(right$BASELINE, right$FINAL, na.rm = TRUE), max(right$BASELINE, right$FINAL, na.rm = TRUE), by = 5)) +
coord_fixed()
ggplot(data = left, aes(x = BASELINE, y = FINAL)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(x = "Average Baseline MD", y = "Average Final MD", title = "Scatterplot of Average Final vs Average \n Baseline MD, Left Eye") +
theme_minimal() +
scale_x_continuous(name = "Average Baseline MD", limits = c(NA, NA), breaks = seq(min(left$BASELINE, left$FINAL, na.rm = TRUE), max(left$BASELINE, left$FINAL, na.rm = TRUE), by = 5)) +
scale_y_continuous(name = "Average Final MD", limits = c(NA, NA), breaks = seq(min(left$BASELINE, left$FINAL, na.rm = TRUE), max(left$BASELINE, left$FINAL, na.rm = TRUE), by = 5)) +
coord_fixed()
paste0("Coefficient for Average Final vs Average Baseline MD, Right Eye: ", round(summary(lm(FINAL ~ BASELINE, data = right))$coefficients[2], 3))
paste0("Coefficient for Average Final vs Average Baseline MD, Left Eye: ", round(summary(lm(FINAL ~ BASELINE, data = left))$coefficients[2], 3))
paste0("P-value for Average Final vs Average Baseline MD, Right Eye: ", summary(lm(FINAL ~ BASELINE, data = right))$coefficients[8])
paste0("P-value for Average Final vs Average Baseline MD, Left Eye: ", summary(lm(FINAL ~ BASELINE, data = left))$coefficients[8])
library(lubridate)
jf$DOB <- parse_date_time(gsub("^20", "19", parse_date_time(jf$DOB, "mdy")), "ymd")
jf$VISIT_DATE <- parse_date_time(jf$VISIT_DATE, "mdy")
jf <- jf %>% group_by(PATIENT_ID) %>% mutate(Age = as.numeric(abs(difftime(VISIT_DATE, DOB, units = "days")/365.25)))
jf
# write.csv(jf, "Jf032024 - 5yr_5Fu.csv")
df
df
r_base <- df %>% filter(EYE == "RE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD, paste0("L_", 1:54))
df
library(tidyverse)
df <- read_csv("ALL_VF_EXAMS_Pattern_Deviation__1990_2020.csv")
setwd("/Users/lianzou/Downloads/Glaucoma Research Volunteer")
rm(list = ls())
library(tidyverse)
df <- read_csv("ALL_VF_EXAMS_Pattern_Deviation__1990_2020.csv")
jf <- read_csv("Jf032024 - 5yr_5FU.csv")
df <- df %>% filter(PATIENT_ID %in% jf$PATIENT_ID) %>% distinct()
library(lubridate)
df$VISIT_DATE <- parse_date_time(df$VISIT_DATE, "mdy")
df <- df %>% select(PATIENT_ID, VISIT_DATE, EYE, MD, paste0("L_", 1:54)) %>% distinct()
df <- df %>% group_by(PATIENT_ID, EYE) %>% mutate(BASELINE = min(VISIT_DATE), FINAL = max(VISIT_DATE))
df$MD <- as.numeric(df$MD)
df
df[, 5:58] <- suppressWarnings(lapply(df[, 5:58], as.numeric))
df
r_base <- df %>% filter(EYE == "RE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, paste0("L_", 1:54))
l_base <- df %>% filter(EYE == "LE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, paste0("L_", 1:54))
r_final <- df %>% filter(EYE == "RE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, paste0("L_", 1:54))
l_final <- df %>% filter(EYE == "LE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, paste0("L_", 1:54))
r_base
r_base <- df %>% filter(EYE == "RE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, paste0("L_", 1:54)) %>% slice(1)
l_base <- df %>% filter(EYE == "LE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, paste0("L_", 1:54)) %>% slice(1)
r_final <- df %>% filter(EYE == "RE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, paste0("L_", 1:54)) %>% slice(1)
l_final <- df %>% filter(EYE == "LE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, paste0("L_", 1:54)) %>% slice(1)
r_base
intersect(r_base$PATIENT_ID, r_final$PATIENT_ID)
intersect(r_final$PATIENT_ID, r_base$PATIENT_ID)
setdiff(r_final$PATIENT_ID, r_base$PATIENT_ID)
r_base
paste0(colnames(r_base), "_BASE")
colnames(r_base) <- paste0(colnames(r_base), "_BASE")
r_baes
r_base
colnames(r_base) <- paste0(colnames(r_base), "_BASE")
colnames(r_final) <- paste0(colnames(r_final), "_FINAL")
colnames(l_base) <- paste0(colnames(l_base), "_BASE")
colnames(l_final) <- paste0(colnames(l_final), "_FINAL")
merge(r_base, r_final)
r_base <- df %>% filter(EYE == "RE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, paste0("L_", 1:54)) %>% slice(1)
l_base <- df %>% filter(EYE == "LE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, paste0("L_", 1:54)) %>% slice(1)
r_final <- df %>% filter(EYE == "RE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, paste0("L_", 1:54)) %>% slice(1)
l_final <- df %>% filter(EYE == "LE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, paste0("L_", 1:54)) %>% slice(1)
colnames(r_base) <- paste0(colnames(r_base), "_BASE")
colnames(r_final) <- paste0(colnames(r_final), "_FINAL")
colnames(l_base) <- paste0(colnames(l_base), "_BASE")
colnames(l_final) <- paste0(colnames(l_final), "_FINAL")
merge(r_base, r_final, by = c())
merge(r_base, r_final, by = c("EYE_BASE" = "EYE_FINAL", "PATIENT_ID_BASE" = "PATIENT_ID_FINAL"))
merge(r_base, r_final, on = c("EYE_BASE" = "EYE_FINAL", "PATIENT_ID_BASE" = "PATIENT_ID_FINAL"))
merge(r_base, r_final, on = c("EYE_BASE" = "EYE_FINAL", "PATIENT_ID_BASE" = "PATIENT_ID_FINAL")) %>% distinct()
r_base
r_base <- df %>% filter(EYE == "RE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, paste0("L_", 1:54)) %>% slice(1)
l_base <- df %>% filter(EYE == "LE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, paste0("L_", 1:54)) %>% slice(1)
r_final <- df %>% filter(EYE == "RE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, paste0("L_", 1:54)) %>% slice(1)
l_final <- df %>% filter(EYE == "LE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, paste0("L_", 1:54)) %>% slice(1)
rbind(r_base, r_final)
rbind(r_base, r_final) %>% distinct()
r_base
r_base <- df %>% filter(EYE == "RE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, paste0("L_", 1:54), VISIT_DATE) %>% slice(1)
l_base <- df %>% filter(EYE == "LE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, paste0("L_", 1:54), VISIT_DATE) %>% slice(1)
r_final <- df %>% filter(EYE == "RE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, paste0("L_", 1:54), VISIT_DATE) %>% slice(1)
l_final <- df %>% filter(EYE == "LE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, paste0("L_", 1:54), VISIT_DATE) %>% slice(1)
r_base
r_base <- df %>% filter(EYE == "RE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
l_base <- df %>% filter(EYE == "LE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
r_final <- df %>% filter(EYE == "RE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
l_final <- df %>% filter(EYE == "LE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
colnames(r_base)[2] <- "BASELINE"
colnames(l_base)[2] <- "BASELINE"
colnames(r_final)[2] <- "FINAL"
colnames(l_final)[2] <- "FINAL"
right <- merge(r_base, r_final) %>% distinct()
left <- merge(l_base, l_final) %>% distinct()
right
library(tidyverse)
df <- read_csv("ALL_VF_EXAMS_Pattern_Deviation__1990_2020.csv")
jf <- read_csv("Jf032024 - 5yr_5FU.csv")
df <- df %>% filter(PATIENT_ID %in% jf$PATIENT_ID) %>% distinct()
library(lubridate)
df$VISIT_DATE <- parse_date_time(df$VISIT_DATE, "mdy")
df <- df %>% select(PATIENT_ID, VISIT_DATE, EYE, MD, paste0("L_", 1:54)) %>% distinct()
df <- df %>% group_by(PATIENT_ID, EYE) %>% mutate(BASELINE = min(VISIT_DATE), FINAL = max(VISIT_DATE))
df$MD <- as.numeric(df$MD)
df[, 5:58] <- suppressWarnings(lapply(df[, 5:58], as.numeric))
r_base <- df %>% filter(EYE == "RE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
l_base <- df %>% filter(EYE == "LE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
r_final <- df %>% filter(EYE == "RE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
l_final <- df %>% filter(EYE == "LE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
colnames(r_base)[2] <- "BASELINE"
colnames(l_base)[2] <- "BASELINE"
colnames(r_final)[2] <- "FINAL"
colnames(l_final)[2] <- "FINAL"
right <- merge(r_base, r_final) %>% distinct()
left <- merge(l_base, l_final) %>% distinct()
right
df
df <- df %>% select(PATIENT_ID, VISIT_DATE, EYE, MD) %>% distinct()
df <- df %>% group_by(PATIENT_ID, EYE) %>% mutate(BASELINE = min(VISIT_DATE), FINAL = max(VISIT_DATE))
df$MD <- as.numeric(df$MD)
df[, 5:58] <- suppressWarnings(lapply(df[, 5:58], as.numeric))
r_base <- df %>% filter(EYE == "RE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
l_base <- df %>% filter(EYE == "LE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
r_final <- df %>% filter(EYE == "RE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
l_final <- df %>% filter(EYE == "LE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
colnames(r_base)[2] <- "BASELINE"
colnames(l_base)[2] <- "BASELINE"
colnames(r_final)[2] <- "FINAL"
colnames(l_final)[2] <- "FINAL"
right <- merge(r_base, r_final) %>% distinct()
left <- merge(l_base, l_final) %>% distinct()
right
library(tidyverse)
df <- read_csv("ALL_VF_EXAMS_Pattern_Deviation__1990_2020.csv")
rm(list = ls())
library(tidyverse)
df <- read_csv("ALL_VF_EXAMS_Pattern_Deviation__1990_2020.csv")
jf <- read_csv("Jf032024 - 5yr_5FU.csv")
df <- df %>% filter(PATIENT_ID %in% jf$PATIENT_ID) %>% distinct()
library(lubridate)
df$VISIT_DATE <- parse_date_time(df$VISIT_DATE, "mdy")
df <- df %>% select(PATIENT_ID, VISIT_DATE, EYE, MD) %>% distinct()
df <- df %>% group_by(PATIENT_ID, EYE) %>% mutate(BASELINE = min(VISIT_DATE), FINAL = max(VISIT_DATE))
df$MD <- as.numeric(df$MD)
r_base <- df %>% filter(EYE == "RE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
l_base <- df %>% filter(EYE == "LE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
r_final <- df %>% filter(EYE == "RE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
l_final <- df %>% filter(EYE == "LE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
colnames(r_base)[2] <- "BASELINE"
colnames(l_base)[2] <- "BASELINE"
colnames(r_final)[2] <- "FINAL"
colnames(l_final)[2] <- "FINAL"
right <- merge(r_base, r_final) %>% distinct()
left <- merge(l_base, l_final) %>% distinct()
rigth
right
df
r_base
rm(list = ls())
library(tidyverse)
df <- read_csv("ALL_VF_EXAMS_Pattern_Deviation__1990_2020.csv")
jf <- read_csv("Jf032024 - 5yr_5FU.csv")
df <- df %>% filter(PATIENT_ID %in% jf$PATIENT_ID) %>% distinct()
library(lubridate)
df$VISIT_DATE <- parse_date_time(df$VISIT_DATE, "mdy")
df <- df %>% select(PATIENT_ID, VISIT_DATE, EYE, MD) %>% distinct()
df <- df %>% group_by(PATIENT_ID, EYE) %>% mutate(BASELINE = min(VISIT_DATE), FINAL = max(VISIT_DATE))
df$MD <- as.numeric(df$MD)
r_base <- df %>% filter(EYE == "RE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
l_base <- df %>% filter(EYE == "LE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
r_final <- df %>% filter(EYE == "RE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
l_final <- df %>% filter(EYE == "LE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
r_base
colnames(r_base)[3] <- "BASELINE"
colnames(l_base)[3] <- "BASELINE"
colnames(r_final)[3] <- "FINAL"
colnames(l_final)[3] <- "FINAL"
right <- merge(r_base, r_final) %>% distinct()
left <- merge(l_base, l_final) %>% distinct()
right
right %>% group_by(PATIENT_ID)
right %>% group_by(PATIENT_ID) %>% distinct()
right %>% group_by(PATIENT_ID) %>% slice(1)
right <- right %>% group_by(PATIENT_ID) %>% slice(1)
left <- left %>% group_by(PATIENT_ID) %>% slice(1)
right
lm(left$FINAL ~ left$BASELINE)
summary(lm(left$FINAL ~ left$BASELINE))
library(tidyverse)
df <- read_csv("ALL_VF_EXAMS_Pattern_Deviation__1990_2020.csv")
jf <- read_csv("Jf032024 - 5yr_5FU.csv")
df <- df %>% filter(PATIENT_ID %in% jf$PATIENT_ID) %>% distinct()
library(lubridate)
df$VISIT_DATE <- parse_date_time(df$VISIT_DATE, "mdy")
df <- df %>% select(PATIENT_ID, VISIT_DATE, EYE, MD) %>% distinct()
df <- df %>% group_by(PATIENT_ID, EYE) %>% mutate(BASELINE = min(VISIT_DATE), FINAL = max(VISIT_DATE))
df$MD <- as.numeric(df$MD)
r_base <- df %>% filter(EYE == "RE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
l_base <- df %>% filter(EYE == "LE", VISIT_DATE == BASELINE) %>% select(PATIENT_ID, MD)
r_final <- df %>% filter(EYE == "RE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
l_final <- df %>% filter(EYE == "LE", VISIT_DATE == FINAL) %>% select(PATIENT_ID, MD)
colnames(r_base)[3] <- "BASELINE"
colnames(l_base)[3] <- "BASELINE"
colnames(r_final)[3] <- "FINAL"
colnames(l_final)[3] <- "FINAL"
right <- merge(r_base, r_final) %>% distinct()
left <- merge(l_base, l_final) %>% distinct()
patient_ids <- unique(left$PATIENT_ID)
results <- list()
for (id in patient_ids) {
patient_data <- subset(left, PATIENT_ID == id)
model <- lm(FINAL ~ BASELINE, data = patient_data)
results[[id]] <- summary(model)
}
for (id in patient_ids) {
patient_data <- subset(left, PATIENT_ID == id)
model <- lm(FINAL ~ BASELINE, data = patient_data)
results[[id]] <- summary(model)
}
patient_ids <- unique(left$PATIENT_ID)
results <- list()
for (id in patient_ids) {
patient_data <- subset(left, PATIENT_ID == id) %>% drop_na()
model <- lm(FINAL ~ BASELINE, data = patient_data)
results[[id]] <- summary(model)
}
results
View(results)
patient_ids <- unique(left$PATIENT_ID)
results <- list()
for (id in patient_ids) {
patient_data <- subset(left, PATIENT_ID == id)
model <- lm(FINAL ~ BASELINE, data = patient_data)
results[[id]] <- summary(model)$coefficients[c(2, 8)]
}
results
right
summary(lm(FINAL ~ BASELINE, data = right))
summary(lm(FINAL ~ BASELINE, data = right))
summary(lm(FINAL ~ BASELINE, data = left))
rm(list = ls())
library(logistf)
install.packages("logistf")
library(logistf)
main <- read_csv("last_v4.csv")
# loading required libraries
library(readxl)
library(maditr)
rm(list = ls())
install.packages("maditr")
install.packages("sjPlot")
# loading required libraries
library(readxl)
library(maditr)
library(tidyverse)
library(sjPlot)
library(logistf)
main <- read_csv("last_v4.csv")
# loading required libraries
library(readxl)
library(maditr)
library(tidyverse)
library(sjPlot)
library(logistf)
main <- read_csv("last_v4.csv")
# loading required libraries
library(readxl)
library(maditr)
library(tidyverse)
library(sjPlot)
library(logistf)
main <- read_csv("last_v4.csv")
setwd("/Users/lianzou/Downloads")
# loading required libraries
library(readxl)
library(maditr)
library(tidyverse)
library(sjPlot)
library(logistf)
main <- read_csv("last_v4.csv")
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~
category2 + Autoimmune.disease + Diabetes +
Immunocompromise + Tobacco.use + Vascular.disease +
multiple_encounters + mohs + elix_vw_score + preventive_antibiotics,
data = main, firth = T, pl = T)
# loading required libraries
library(readxl)
library(maditr)
library(tidyverse)
library(sjPlot)
library(logistf)
main <- read_csv("last_v4.csv")
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~
category2 + Autoimmune.disease + Diabetes +
Immunocompromise + Tobacco.use + Vascular.disease +
multiple_encounters + mohs + elix_vw_score + preventive_antibiotics,
data = main, firth = T, pl = T)
main
# loading required libraries
library(readxl)
library(maditr)
library(tidyverse)
library(sjPlot)
library(logistf)
main <- read_csv("last_v4 (1).csv")
main
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~
category2 + Autoimmune.disease + Diabetes +
Immunocompromise + Tobacco.use + Vascular.disease +
multiple_encounters + mohs + elix_vw_score + preventive_antibiotics,
data = main, firth = T, pl = T)
# view model results
summary(fir)
# view coefficients
exp(coef(fir))
# view 95% confidence intervals
round(exp(cbind(Estimate=coef(fir), confint(fir))), 4)
# plot
plot_model(fir)
# loading required libraries
library(readxl)
library(maditr)
library(tidyverse)
library(sjPlot)
library(logistf)
main <- read_csv("full_v5 (1).csv")
main
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~
category2 + Autoimmune.disease + Diabetes +
Immunocompromise + Tobacco.use + Vascular.disease +
multiple_encounters + mohs + elix_vw_score + preventive_antibiotics,
data = main, firth = T, pl = T)
main
# loading required libraries
library(readxl)
library(maditr)
library(tidyverse)
library(sjPlot)
library(logistf)
main <- read_csv("full_v5 (1).csv")
main
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~
category2 + Autoimmune.disease + Diabetes +
Immunocompromise + Tobacco.use + Vascular.disease +
multiple_encounters + mohs + elix_vw_score + preventive_antibiotics,
data = main, firth = T, pl = T)
main
colnames(main)
# loading required libraries
library(readxl)
library(maditr)
library(tidyverse)
library(sjPlot)
library(logistf)
main <- read_csv("full_v5 (1).csv")
colnames(main)
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~
category2 + Autoimmune + Diabetes +
Immunocompromise + Tobacco.use + Vascular.disease +
multiple_encounters + mohs + elix_vw_score + preventive_antibiotics,
data = main, firth = T, pl = T)
# loading required libraries
library(readxl)
library(maditr)
library(tidyverse)
library(sjPlot)
library(logistf)
main <- read_csv("full_v5 (1).csv")
colnames(main)
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~
category2 + Autoimmune + Diabetes +
Immunocompromise + Tobacco + Vascular +
multiple_encounters + mohs + elix_vw_score + preventive_antibiotics,
data = main, firth = T, pl = T)
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~
category2 + Autoimmune + Diabetes +
Immunocompromise + Tobacco + Vascular +
multiple_encounters + mohs + elix_vw_score + preventive_antibiotics,
data = main, firth = T, pl = T)
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~
category2 + Autoimmune + Diabetes +
Immunocompromise + Tobacco + Vascular + mohs + elix_vw_score + preventive_antibiotics,
data = main, firth = T, pl = T)
# view model results
summary(fir)
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~ .,
data = main, firth = T, pl = T)
colnames(main)
main
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~
category2 + Autoimmune + Diabetes +
Immunocompromise + Tobacco + Vascular +
+ mohs + elix_vw_score + preventive_antibiotics,
data = main, firth = T, pl = T)
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~
category2 + Autoimmune + Diabetes +
Immunocompromise + Tobacco + Vascular +
+ mohs + elix_vw_score + preventive_antibiotics,
data = main, firth = T, pl = T)
# view model results
summary(fir)
# view coefficients
exp(coef(fir))
# view 95% confidence intervals
round(exp(cbind(Estimate=coef(fir), confint(fir))), 4)
# plot
plot_model(fir)
colnames(main)
main
main %>% group_by(ip_patient_id) %>% summarize(n_distinct(ip_enc_id))
main <- main %>% group_by(ip_patient_id) %>% mutate(multiple_encounters == ifelse(n_distinct(ip_enc_id) > 1, 1, 0))
main <- main %>% group_by(ip_patient_id) %>% mutate(multiple_encounters = ifelse(n_distinct(ip_enc_id) > 1, 1, 0))
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~
category2 + Autoimmune + Diabetes +
Immunocompromise + Tobacco + Vascular + multiple_encounters +
+ mohs + elix_vw_score + preventive_antibiotics,
data = main, firth = T, pl = T)
# create logist model
fir <- logistf(antibiotics_after_procedure_less_thirty ~
category2 + Autoimmune + Diabetes +
Immunocompromise + Tobacco + Vascular + multiple_encounters +
+ mohs + elix_vw_score + preventive_antibiotics,
data = main, firth = T, pl = T)
# view model results
summary(fir)
# cr
rm(list = ls())
library(ggplot2)
# Read the data
commute_data <- read.csv('/mnt/data/california_commute_data.csv')
library(ggplot2)
# Read the data
commute_data <- read.csv('/mnt/data/california_commute_data.csv')
# Read the data
commute_data <- read.csv('california_commute_data.csv')
setwd("/Users/lianzou/Downloads/ENV188B")
library(ggplot2)
# Read the data
commute_data <- read.csv('california_commute_data.csv')
# Create the plot
p <- ggplot(commute_data, aes(x=Year, y=Percentage, group=Mode, color=Mode)) +
geom_line() +
geom_point() +
theme_minimal() +
labs(title='Commuting Modes in California from 2015 to 2022',
x='Year',
y='Percentage',
color='Mode') +
theme(legend.position="bottom")
p
commute_data <- read.csv('california_commute_data.csv')
# Create the plot
p <- ggplot(commute_data, aes(x=Year, y=Percentage, group=Mode, color=Mode)) +
geom_line() +
geom_point() +
theme_minimal() +
labs(title='Commuting Modes in California from 2015 to 2022',
x='Year',
y='Percentage',
color='Mode') +
theme(legend.position="bottom")
# Create the plot
ggplot(commute_data, aes(x=Year, y=Percentage, group=Mode, color=Mode)) +
geom_line() +
geom_point() +
theme_minimal() +
labs(title='Commuting Modes in California from 2015 to 2022',
x='Year',
y='Percentage',
color='Mode') +
theme(legend.position="bottom")
