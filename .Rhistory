data <- data.frame(
Year = rep(2017:2022,  8),
Category = rep(c("Fatal Crashes", "Fatal and Serious Injury Crashes", "Car Fatalities",
"Car Fatalities and Serious Injuries", "Pedestrian Fatalities",
"Pedestrian Fatalities and Serious Injuries", "Bicyclist Fatalities",
"Bicyclist Fatalities and Serious Injuries"), each =  6),
Count = c(715,  3851,  758,  4287,  271,  1060,  38,  279,  693,  4070,  741,  4496,  260,  1091,  41,  316,
683,  4148,  724,  4582,  287,  1184,  272,  1015,  29,  236,  324,  729,  3867,  769,  4348,
272,  798,  840,  5244,  305,  1237,  311,  811,  4575,  5113,  861,  35)
)
# Create a data frame
data <- data.frame(
Year = rep(2017:2022,  8),
Category = rep(c("Fatal Crashes", "Fatal and Serious Injury Crashes", "Car Fatalities",
"Car Fatalities and Serious Injuries", "Pedestrian Fatalities",
"Pedestrian Fatalities and Serious Injuries", "Bicyclist Fatalities",
"Bicyclist Fatalities and Serious Injuries"), each =  6),
Count = c(715,  3851,  758,  4287,  271,  1060,  38,  279,  693,  4070,  741,  4496,  260,  1091,  41,  316,
683,  4148,  724,  4582,  287,  1184,  272,  1015,  29,  236,  324,  729,  3867,  769,  4348,
272,  798,  840,  5244,  305,  1237,  311,  811,  4575,  5113,  861,  35)
)
# Create a data frame
data <- data.frame(
Year = rep(2017:2022,  8),
Category = rep(c("Fatal Crashes", "Fatal and Serious Injury Crashes", "Car Fatalities",
"Car Fatalities and Serious Injuries", "Pedestrian Fatalities",
"Pedestrian Fatalities and Serious Injuries", "Bicyclist Fatalities",
"Bicyclist Fatalities and Serious Injuries"), each =  6),
Count = c(715,  3851,  758,  4287,  271,  1060,  38,  279,  693,  4070,  741,  4496,  260,  1091,  41,  316,  683,  4148,  724,  4582,  287,  1184,  272,  1015,  29,  236,  324,  729,  3867,  769,  4348,  272,  798,  840,  5244,  305,  1237,  311,  811,  4575,  5113,  861,  35)
)
# Corrected data frame creation
data <- data.frame(
Year = rep(2017:2022, each =  8),  # Corrected the number of repetitions
Category = rep(c("Fatal Crashes", "Fatal and Serious Injury Crashes", "Car Fatalities",
"Car Fatalities and Serious Injuries", "Pedestrian Fatalities",
"Pedestrian Fatalities and Serious Injuries", "Bicyclist Fatalities",
"Bicyclist Fatalities and Serious Injuries"), each =  6),  # Corrected the number of repetitions
Count = c(715,  3851,  758,  4287,  271,  1060,  38,  279,  693,  4070,  741,  4496,  260,  1091,  41,  316,
683,  4148,  724,  4582,  287,  1184,  272,  1015,  29,  236,  324,  729,  3867,  769,  4348,
272,  798,  840,  5244,  305,  1237,  311,  811,  4575,  5113,  861,  35)
)
# Corrected data frame creation
data <- data.frame(
Year = rep(2017:2022, each =  8),  # Corrected the number of repetitions
Category = rep(c("Fatal Crashes", "Fatal and Serious Injury Crashes", "Car Fatalities",
"Car Fatalities and Serious Injuries", "Pedestrian Fatalities",
"Pedestrian Fatalities and Serious Injuries", "Bicyclist Fatalities",
"Bicyclist Fatalities and Serious Injuries"), each =  6),  # Corrected the number of repetitions
Count = c(715,  3851,  758,  4287,  271,  1060,  38,  279,
693,  4070,  741,  4496,  260,  1091,  41,  316,
683,  4148,  724,  4582,  287,  1184,  42,  290,
729,  3867,  769,  4348,  272,  1015,  29,  236,
798,  4718,  840,  5244,  305,  1237,  29,  269,
811,  4575,  861,  5113,  311,  1197,  35,  324)
)
# Create the plot
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "bottom") +
facet_wrap(~Category, scales = "free_y", ncol =  2)
# Create the plot
# Create the plot
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "bottom")
rep(2017:2022, each =  8)
rep(c("Fatal Crashes", "Fatal and Serious Injury Crashes", "Car Fatalities",
"Car Fatalities and Serious Injuries", "Pedestrian Fatalities",
"Pedestrian Fatalities and Serious Injuries", "Bicyclist Fatalities",
"Bicyclist Fatalities and Serious Injuries"), each =  6)
rep(c("Fatal Crashes", "Fatal and Serious Injury Crashes", "Car Fatalities",
"Car Fatalities and Serious Injuries", "Pedestrian Fatalities",
"Pedestrian Fatalities and Serious Injuries", "Bicyclist Fatalities",
"Bicyclist Fatalities and Serious Injuries"), 6)
# Corrected data frame creation
data <- data.frame(
Year = rep(2017:2022, each =  8),  # Corrected the number of repetitions
Category = rep(c("Fatal Crashes", "Fatal and Serious Injury Crashes", "Car Fatalities",
"Car Fatalities and Serious Injuries", "Pedestrian Fatalities",
"Pedestrian Fatalities and Serious Injuries", "Bicyclist Fatalities",
"Bicyclist Fatalities and Serious Injuries"), 6),  # Corrected the number of repetitions
Count = c(715,  3851,  758,  4287,  271,  1060,  38,  279,
693,  4070,  741,  4496,  260,  1091,  41,  316,
683,  4148,  724,  4582,  287,  1184,  42,  290,
729,  3867,  769,  4348,  272,  1015,  29,  236,
798,  4718,  840,  5244,  305,  1237,  29,  269,
811,  4575,  861,  5113,  311,  1197,  35,  324)
)
# Create the plot
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "bottom")
# Create the plot
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_manual(values = c("Fatal Crashes" = "#FF0000",  # Red for Fatal Crashes
"Fatal and Serious Injury Crashes" = "#00FF00",  # Green for Fatal and Serious Injury Crashes
"Car Fatalities" = "#0000FF",  # Blue for Car Fatalities
"Car Fatalities and Serious Injuries" = "#FFFF00",  # Yellow for Car Fatalities and Serious Injuries
"Pedestrian Fatalities" = "#00FFFF",  # Cyan for Pedestrian Fatalities
"Pedestrian Fatalities and Serious Injuries" = "#FF00FF",  # Magenta for Pedestrian Fatalities and Serious Injuries
"Bicyclist Fatalities" = "#800080",  # Purple for Bicyclist Fatalities
"Bicyclist Fatalities and Serious Injuries" = "#008080"))  # Teal for Bicyclist Fatalities and Serious Injuries
# Create the plot
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_tron()
# Create the plot
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_tron()
install.packages(ggsci)
install.packages("ggsci")
library(ggsci)
# Create the plot
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_tron()
# Create the plot
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "bottom")
# Create the plot
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "bottom",
legend.key.size = unit(1, 'cm'),  # Change legend key size
legend.key.height = unit(1, 'cm'),  # Change legend key height
legend.key.width = unit(1, 'cm'),  # Change legend key width
legend.title = element_text(size=14),  # Change legend title font size
legend.text = element_text(size=10))  # Change legend text font size
# Create the plot
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "top")
# Create the plot
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left")
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = c("Fatal Crashes" = "#FF0000",  # Red
"Fatal and Serious Injury Crashes" = "#00FF00",  # Green
"Car Fatalities" = "#0000FF",  # Blue
"Car Fatalities and Serious Injuries" = "#FFFF00",  # Yellow
"Pedestrian Fatalities" = "#FF69B4",  # Hot Pink
"Pedestrian Fatalities and Serious Injuries" = "#008080",  # Teal
"Bicyclist Fatalities" = "#8B008B",  # Dark Magenta
"Bicyclist Fatalities and Serious Injuries" = "#4B0082"))  # Indigo
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_gradientn(colors = rainbow(8))  # Using a gradient of brighter colors
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_gradientn(colors = rainbow(8))  # Using a gradient of brighter colors
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_manual(colors = rainbow(8))  # Using a gradient of brighter colors
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_manual(values = rainbow(8))  # Using a gradient of brighter colors
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = rainbow(8))  # Using a gradient of brighter colors
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = rainbow(9))  # Using a gradient of brighter colors
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = Spectral(8))  # Using a gradient of brighter colors
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = viridis(8))  # Using a gradient of brighter colors
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = c("Fatal Crashes" = "#FF0000",  # Red
"Fatal and Serious Injury Crashes" = "#00FF00",  # Green
"Car Fatalities" = "#0000FF",  # Blue
"Car Fatalities and Serious Injuries" = "#FFFF00",  # Yellow
"Pedestrian Fatalities" = "#FF69B4",  # Hot Pink
"Pedestrian Fatalities and Serious Injuries" = "#008080",  # Teal
"Bicyclist Fatalities" = "#800080",  # Purple
"Bicyclist Fatalities and Serious Injuries" = "#4B0082"))  # Indigo
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = c("Fatal Crashes" = "#FF0000",  # Red
"Fatal and Serious Injury Crashes" = "#00FF00",  # Green
"Car Fatalities" = "#0000FF",  # Blue
"Car Fatalities and Serious Injuries" = "#FFFF00",  # Yellow
"Pedestrian Fatalities" = "#FF69B4",  # Hot Pink
"Pedestrian Fatalities and Serious Injuries" = "#008080",  # Teal
"Bicyclist Fatalities" = "#800080",  # Purple
"Bicyclist Fatalities and Serious Injuries" = "#000000"))  # Black
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = c("Fatal Crashes" = "#FF0000",  # Red
"Fatal and Serious Injury Crashes" = "#00FF00",  # Green
"Car Fatalities" = "#0000FF",  # Blue
"Car Fatalities and Serious Injuries" = "#FFFF00",  # Yellow
"Pedestrian Fatalities" = "lightblue",
"Pedestrian Fatalities and Serious Injuries" = "#008080",  # Teal
"Bicyclist Fatalities" = "#800080",  # Purple
"Bicyclist Fatalities and Serious Injuries" = "#000000"))  # Black
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = c("Fatal Crashes" = "red",  # Red
"Fatal and Serious Injury Crashes" = "green",  # Green
"Car Fatalities" = "blue",  # Blue
"Car Fatalities and Serious Injuries" = "yellow",  # Yellow
"Pedestrian Fatalities" = "darkgray",
"Pedestrian Fatalities and Serious Injuries" = "",  # Teal
"Bicyclist Fatalities" = "purple",  # Purple
"Bicyclist Fatalities and Serious Injuries" = "pink"))  # Black
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = c("Fatal Crashes" = "red",
"Fatal and Serious Injury Crashes" = "green",
"Car Fatalities" = "blue",
"Car Fatalities and Serious Injuries" = "yellow",
"Pedestrian Fatalities" = "darkgray",
"Pedestrian Fatalities and Serious Injuries" = "orange",
"Bicyclist Fatalities" = "purple",
"Bicyclist Fatalities and Serious Injuries" = "pink"))
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = c("Fatal Crashes" = "red",
"Fatal and Serious Injury Crashes" = "darkgray",
"Car Fatalities" = "blue",
"Car Fatalities and Serious Injuries" = "yellow",
"Pedestrian Fatalities" = "green",
"Pedestrian Fatalities and Serious Injuries" = "orange",
"Bicyclist Fatalities" = "purple",
"Bicyclist Fatalities and Serious Injuries" = "pink"))
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = c("Fatal Crashes" = "red",
"Fatal and Serious Injury Crashes" = "brown",
"Car Fatalities" = "blue",
"Car Fatalities and Serious Injuries" = "yellow",
"Pedestrian Fatalities" = "green",
"Pedestrian Fatalities and Serious Injuries" = "orange",
"Bicyclist Fatalities" = "purple",
"Bicyclist Fatalities and Serious Injuries" = "pink"))
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = c("Fatal Crashes" = "red",
"Fatal and Serious Injury Crashes" = "brown",
"Car Fatalities" = "blue",
"Car Fatalities and Serious Injuries" = "gold",
"Pedestrian Fatalities" = "green",
"Pedestrian Fatalities and Serious Injuries" = "orange",
"Bicyclist Fatalities" = "purple",
"Bicyclist Fatalities and Serious Injuries" = "pink"))
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = c("Fatal Crashes" = "red",
"Fatal and Serious Injury Crashes" = "brown",
"Car Fatalities" = "blue",
"Car Fatalities and Serious Injuries" = "gold",
"Pedestrian Fatalities" = "orange",
"Pedestrian Fatalities and Serious Injuries" = "green",
"Bicyclist Fatalities" = "pink",
"Bicyclist Fatalities and Serious Injuries" = "purple"))
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = c("Fatal Crashes" = "red",
"Fatal and Serious Injury Crashes" = "brown",
"Car Fatalities" = "blue",
"Car Fatalities and Serious Injuries" = "gold",
"Pedestrian Fatalities" = "orange",
"Pedestrian Fatalities and Serious Injuries" = "darkgreen",
"Bicyclist Fatalities" = "pink",
"Bicyclist Fatalities and Serious Injuries" = "purple"))
# Assuming 'data' is your prepared data frame
ggplot(data, aes(x = Year, y = Count, group = Category, color = Category)) +
geom_line() +
geom_point() +
labs(title = "Road Safety Statistics (2017-2022)",
x = "Year",
y = "Count",
color = "Category") +
theme_minimal() +
theme(legend.position = "left") +
scale_color_manual(values = c("Fatal Crashes" = "red",
"Fatal and Serious Injury Crashes" = "brown",
"Car Fatalities" = "blue",
"Car Fatalities and Serious Injuries" = "gold",
"Pedestrian Fatalities" = "orange",
"Pedestrian Fatalities and Serious Injuries" = "lightgreen",
"Bicyclist Fatalities" = "pink",
"Bicyclist Fatalities and Serious Injuries" = "purple"))
