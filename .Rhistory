rnfl$LAST_NAME <- toupper(rnfl$LAST_NAME)
mac$FIRST_NAME <- toupper(mac$FIRST_NAME)
rnfl$FIRST_NAME <- toupper(rnfl$FIRST_NAME)
keep$GIVEN_NAME <- toupper(keep$GIVEN_NAME)
keep$LAST_NAME <- toupper(keep$LAST_NAME)
keep
parse_date_time(keep$DOB, "mdy")
keep$DOB <- parse_date_time(keep$DOB, "mdy")
rnfl$DOB <- parse_date_time(rnfl$DOB, "mdy")
keep
keep$EYE <- gsub("RE", "OD", keep$EYE)
keep$EYE <- gsub("LE", "OS", keep$EYE)
keep$to_merge <- apply(keep[, c("GIVEN_NAME", "LAST_NAME","DOB", "EYE")], 1, function(x) paste(x, collapse = "_"))
keep
keep <- keep %>% select(to_merge, colnames(keep)[1:102])
keep
mac$to_merge <- apply(mac[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
mac <- mac %>% select(to_merge, colnames(mac)[1:95])
rnfl$to_merge <- apply(rnfl[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
rnfl <- rnfl %>% select(to_merge, colnames(rnfl)[1:74])
mac <- mac %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 429 eyes
mac
rnfl <- rnfl %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 2155 eyes
rnfl
library(writexl)
write_xlsx(list("Macula" = mac, "RNFL" = rnfl), "Merged_All_VF_LongData.xlsx")
keep
rnfl
library(tidyverse)
library(readxl)
mac <- read_excel("0503_LongitudinalData.xlsx",
sheet = "Macula")
rnfl <- suppressWarnings(read_excel("0503_LongitudinalData.xlsx",
sheet = "RNFL"))
keep <- read_csv("ALL_VF_EXAMS_HEADER_SS_242_302.csv")
mac$LAST_NAME <- toupper(mac$LAST_NAME)
rnfl$LAST_NAME <- toupper(rnfl$LAST_NAME)
mac$FIRST_NAME <- toupper(mac$FIRST_NAME)
rnfl$FIRST_NAME <- toupper(rnfl$FIRST_NAME)
keep$GIVEN_NAME <- toupper(keep$GIVEN_NAME)
keep$LAST_NAME <- toupper(keep$LAST_NAME)
keep$DOB <- parse_date_time(keep$DOB, "mdy")
rnfl$DOB <- parse_date_time(rnfl$DOB, "mdy")
keep$EYE <- gsub("RE", "OD", keep$EYE)
keep$EYE <- gsub("LE", "OS", keep$EYE)
keep$to_merge <- apply(keep[, c("GIVEN_NAME", "LAST_NAME","DOB", "EYE")], 1, function(x) paste(x, collapse = "_"))
keep <- keep %>% select(to_merge, colnames(keep)[1:102])
mac$to_merge <- apply(mac[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
mac <- mac %>% select(to_merge, colnames(mac)[1:95])
rnfl$to_merge <- apply(rnfl[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
rnfl <- rnfl %>% select(to_merge, colnames(rnfl)[1:74])
mac <- mac %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 978 eyes
rnfl <- rnfl %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 4980 eyes
library(writexl)
write_xlsx(list("Macula" = mac, "RNFL" = rnfl), "Merged_All_VF_LongData.xlsx")
rm(list = ls())
library(tidyverse)
library(readxl)
mac <- read_excel("0503_LongitudinalData.xlsx",
sheet = "Macula")
rnfl <- suppressWarnings(read_excel("0503_LongitudinalData.xlsx",
sheet = "RNFL"))
keep <- read_csv("ALL_VF_EXAMS_HEADER_SS_242_302.csv")
mac$LAST_NAME <- toupper(mac$LAST_NAME)
rnfl$LAST_NAME <- toupper(rnfl$LAST_NAME)
mac$FIRST_NAME <- toupper(mac$FIRST_NAME)
rnfl$FIRST_NAME <- toupper(rnfl$FIRST_NAME)
keep$GIVEN_NAME <- toupper(keep$GIVEN_NAME)
keep$LAST_NAME <- toupper(keep$LAST_NAME)
keep$DOB <- parse_date_time(keep$DOB, "mdy")
rnfl$DOB <- parse_date_time(rnfl$DOB, "mdy")
keep$EYE <- gsub("RE", "OD", keep$EYE)
keep$EYE <- gsub("LE", "OS", keep$EYE)
keep$to_merge <- apply(keep[, c("GIVEN_NAME", "LAST_NAME","DOB", "EYE")], 1, function(x) paste(x, collapse = "_"))
keep <- keep %>% select(to_merge, colnames(keep)[1:102])
mac$to_merge <- apply(mac[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
mac <- mac %>% select(to_merge, colnames(mac)[1:95])
rnfl$to_merge <- apply(rnfl[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
rnfl <- rnfl %>% select(to_merge, colnames(rnfl)[1:74])
mac <- mac %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 978 eyes
rnfl <- rnfl %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 4980 eyes
library(writexl)
write_xlsx(list("Macula" = mac, "RNFL" = rnfl), "Merged_All_VF_LongData.xlsx")
mac
keep %>% filter(to_merge %in% mac$to_merge)
keep %>% filter(to_merge %in% mac$to_merge) %>% distinct()
keep %>% filter(to_merge %in% mac$to_merge) %>% distinct()
keep_mac <- keep %>% filter(to_merge %in% mac$to_merge) %>% distinct()
keep_rnfl <- keep %>% filter(to_merge %in% rnfl$to_merge) %>% distinct()
keep_rnfl
write_xlsx(list("Macula_VF" = keep_mac, "RNFL_VF" = keep_rnfl), "VF_ExtractedLongData.xlsx")
rm(list = ls())
library(tidyverse)
library(readxl)
mac <- read_excel("0503_LongitudinalData.xlsx",
sheet = "Macula")
rnfl <- suppressWarnings(read_excel("0503_LongitudinalData.xlsx",
sheet = "RNFL"))
keep <- read_csv("ALL_VF_EXAMS_HEADER_SS_242_302.csv")
mac$LAST_NAME <- toupper(mac$LAST_NAME)
rnfl$LAST_NAME <- toupper(rnfl$LAST_NAME)
mac$FIRST_NAME <- toupper(mac$FIRST_NAME)
rnfl$FIRST_NAME <- toupper(rnfl$FIRST_NAME)
keep$GIVEN_NAME <- toupper(keep$GIVEN_NAME)
keep$LAST_NAME <- toupper(keep$LAST_NAME)
keep$DOB <- parse_date_time(keep$DOB, "mdy")
rnfl$DOB <- parse_date_time(rnfl$DOB, "mdy")
keep$EYE <- gsub("RE", "OD", keep$EYE)
keep$EYE <- gsub("LE", "OS", keep$EYE)
keep$to_merge <- apply(keep[, c("GIVEN_NAME", "LAST_NAME","DOB", "EYE")], 1, function(x) paste(x, collapse = "_"))
keep <- keep %>% select(to_merge, colnames(keep)[1:102])
mac$to_merge <- apply(mac[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
mac <- mac %>% select(to_merge, colnames(mac)[1:95])
rnfl$to_merge <- apply(rnfl[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
rnfl <- rnfl %>% select(to_merge, colnames(rnfl)[1:74])
mac <- mac %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 978 eyes
rnfl <- rnfl %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 4980 eyes
library(writexl)
write_xlsx(list("Macula" = mac, "RNFL" = rnfl), "Merged_All_VF_LongData.xlsx")
keep_mac <- keep %>% filter(to_merge %in% mac$to_merge) %>% distinct()
keep_rnfl <- keep %>% filter(to_merge %in% rnfl$to_merge) %>% distinct()
keep_mac
mac
merge(keep_mac, mac[, 1:2])
merge(keep_mac, mac[, 1:2])
keep_mac <- merge(keep_mac, mac[, 1:2])
keep_mac
keep_mac %>% select(to_merge, ID, colnames(keep_mac)[2:103])
keep_mac <- keep_mac %>% select(to_merge, ID, colnames(keep_mac)[2:103])
merge(keep_rnfl, rnfl[, 1:2])
keep_rnfl <- merge(keep_rnfl, rnfl[, 1:2])
keep_rnfl
keep_rnfl %>% select(to_merge, ID, colnames(keep_rnfl)[2:103])
keep_rnfl <- keep_rnfl %>% select(to_merge, ID, colnames(keep_rnfl)[2:103])
keep_rnfl
keep_mac
keep_mac %>% group_by(to_merge)
keep_mac %>% group_by(to_merge, ID)
keep_mac %>% group_by(to_merge, ID) %>% arrange(VISIT_DATE)
keep_mac$VISIT_DATE <- parse_date_time(keep_mac$VISIT_DATE, "mdy")
keep_rnfl$VISIT_DATE <- parse_date_time(keep_rnfl$VISIT_DATE, "mdy")
keep_mac
keep_mac %>% group_by(to_merge)
keep_mac %>% group_by(to_merge, ID)
keep_mac %>% group_by(to_merge, ID) %>% arrange(VISIT_DATE)
keep_mac <- keep_mac %>% group_by(to_merge, ID) %>% arrange(VISIT_DATE)
keep_rnfl <- keep_rnfl %>% group_by(to_merge, ID) %>% arrange(VISIT_DATE)
keep_mac
keep_mac %>% summarize(VISIT_DATE - min(VISIT_DATE))
keep_mac %>% summarize(difftime(VISIT_DATE, min(VISIT_DATE)))
keep_mac %>% summarize(difftime(VISIT_DATE, min(VISIT_DATE), units = "days"))
keep_mac %>% summarize(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25)
keep_mac %>% summarize(as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25))
keep_mac %>% summarize(FOLLOW_UP = as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25))
keep_mac %>% mutate(FOLLOW_UP = as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25))
keep_mac %>% mutate(FOLLOW_UP = as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25)) %>% select(to_merge, ID, FOLLOW_UP)
keep_mac %>% mutate(FOLLOW_UP = as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25))
keep_mac %>% mutate(FOLLOW_UP = as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25)) %>% select(to_merge, ID, FOLLOW_UP, colnames(keep_mac)[3:104])
keep_mac <- keep_mac %>% mutate(FOLLOW_UP = as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25)) %>% select(to_merge, ID, FOLLOW_UP, colnames(keep_mac)[3:104])
keep_rnfl <- keep_rnfl %>% mutate(FOLLOW_UP = as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25)) %>% select(to_merge, ID, FOLLOW_UP, colnames(keep_rnfl)[3:104])
keep_rnfl
keep_rnfl
keep_rnfl %>% group_by(to_merge)
keep_rnfl %>% group_by(to_merge, ID)
rm(list = ls())
library(tidyverse)
library(readxl)
mac <- read_excel("0503_LongitudinalData.xlsx",
sheet = "Macula")
rnfl <- suppressWarnings(read_excel("0503_LongitudinalData.xlsx",
sheet = "RNFL"))
keep <- read_csv("ALL_VF_EXAMS_HEADER_SS_242_302.csv")
mac$LAST_NAME <- toupper(mac$LAST_NAME)
rnfl$LAST_NAME <- toupper(rnfl$LAST_NAME)
mac$FIRST_NAME <- toupper(mac$FIRST_NAME)
rnfl$FIRST_NAME <- toupper(rnfl$FIRST_NAME)
keep$GIVEN_NAME <- toupper(keep$GIVEN_NAME)
keep$LAST_NAME <- toupper(keep$LAST_NAME)
keep$DOB <- parse_date_time(keep$DOB, "mdy")
rnfl$DOB <- parse_date_time(rnfl$DOB, "mdy")
keep$EYE <- gsub("RE", "OD", keep$EYE)
keep$EYE <- gsub("LE", "OS", keep$EYE)
keep$to_merge <- apply(keep[, c("GIVEN_NAME", "LAST_NAME","DOB", "EYE")], 1, function(x) paste(x, collapse = "_"))
keep <- keep %>% select(to_merge, colnames(keep)[1:102])
mac$to_merge <- apply(mac[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
mac <- mac %>% select(to_merge, colnames(mac)[1:95])
rnfl$to_merge <- apply(rnfl[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
rnfl <- rnfl %>% select(to_merge, colnames(rnfl)[1:74])
mac <- mac %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 978 eyes
rnfl <- rnfl %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 4980 eyes
library(writexl)
write_xlsx(list("Macula" = mac, "RNFL" = rnfl), "Merged_All_VF_LongData.xlsx")
keep_mac <- keep %>% filter(to_merge %in% mac$to_merge) %>% distinct()
keep_rnfl <- keep %>% filter(to_merge %in% rnfl$to_merge) %>% distinct()
keep_mac <- merge(keep_mac, mac[, 1:2])
keep_mac <- keep_mac %>% select(to_merge, ID, colnames(keep_mac)[2:103])
keep_rnfl <- merge(keep_rnfl, rnfl[, 1:2])
keep_rnfl <- keep_rnfl %>% select(to_merge, ID, colnames(keep_rnfl)[2:103])
keep_mac$VISIT_DATE <- parse_date_time(keep_mac$VISIT_DATE, "mdy")
keep_rnfl$VISIT_DATE <- parse_date_time(keep_rnfl$VISIT_DATE, "mdy")
keep_mac <- keep_mac %>% group_by(to_merge, ID) %>% arrange(VISIT_DATE)
keep_rnfl <- keep_rnfl %>% group_by(to_merge, ID) %>% arrange(VISIT_DATE)
keep_mac
keep_mac %>% group_by(to_merge)
keep_mac <- keep_mac %>% group_by(to_merge)
keep_rnfl %>% group_by(to_merge)
keep_rnfl %>% group_by(to_merge, ID)
keep_rnfl %>% group_by(to_merge) %>% summarize(n_distinct(ID))
keep_rnfl %>% group_by(to_merge) %>% summarize(WHAT = n_distinct(ID)) %>% filter(WHAT != 1)
keep_rnfl %>% group_by(to_merge) %>% mutate(WHAT = n_distinct(ID)) %>% filter(WHAT != 1)
keep_rnfl <- keep_rnfl %>% group_by(to_merge)
keep_mac <- keep_mac %>% mutate(FOLLOW_UP = as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25)) %>% select(to_merge, ID, FOLLOW_UP, colnames(keep_mac)[3:104])
keep_rnfl <- keep_rnfl %>% mutate(FOLLOW_UP = as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25)) %>% select(to_merge, ID, FOLLOW_UP, colnames(keep_rnfl)[3:104])
keep_rnfl
keep_rnfl %>% summarize(n(to_merge))
keep_rnfl %>% count(to_merge))
keep_rnfl %>% count(to_merge)
keep_rnfl %>% summarize(n_distinct(VISIT_DATE))
keep_rnfl %>% summarize(n_distinct(VISIT_DATE))
keep_rnfl %>% summarize(count(to_merge))
keep_rnfl %>% summarize(n(to_merge))
keep_rnfl %>% count(to_merge)
keep_rnfl %>% summarize(n(VISIT_DATE))
keep_rnfl %>% count(VISIT_DATE)
keep_rnfl %>% count(VISIT_DATE)
keep_rnfl %>% count(to_merge)
keep_rnfl %>% count(VISIT_DATE)
keep_rnfl %>% count(to_merge)
keep_rnfl
keep_rnfl %>% distinct()
keep_rnfl <- keep_rnfl %>% distinct()
keep_mac <- keep_mac %>% distinct()
keep_rnfl
keep_rnfl
keep_rnfl %>% count(to_merge)
keep_rnfl %>% count(VISIT_DATE)
keep_rnfl %>% summarize(n_distinct(VISIT_DATE))
keep_rnfl %>% count(to_merge)
keep_rnfl %>% summarize(n_distinct(VISIT_DATE))
keep_rnfl %>% summarize(n_distinct(VISIT_DATE))
keep_rnfl %>% summarize(VISITS = n_distinct(VISIT_DATE))
keep_rnfl %>% mutate(VISITS = n_distinct(VISIT_DATE))
keep_rnfl %>% mutate(VISITS = n_distinct(VISIT_DATE)) %>% select(to_merge, ID, FOLLOW_UP, VISITS, colnames(keep_rnfl)[4:105])
keep_rnfl %>% mutate(VISITS = n_distinct(VISIT_DATE)) %>% select(to_merge, ID, FOLLOW_UP, VISITS, colnames(keep_rnfl)[4:105]) %>% arrange(VISIT_DATE)
library(tidyverse)
library(readxl)
mac <- read_excel("0503_LongitudinalData.xlsx",
sheet = "Macula")
rnfl <- suppressWarnings(read_excel("0503_LongitudinalData.xlsx",
sheet = "RNFL"))
keep <- read_csv("ALL_VF_EXAMS_HEADER_SS_242_302.csv")
mac$LAST_NAME <- toupper(mac$LAST_NAME)
rnfl$LAST_NAME <- toupper(rnfl$LAST_NAME)
mac$FIRST_NAME <- toupper(mac$FIRST_NAME)
rnfl$FIRST_NAME <- toupper(rnfl$FIRST_NAME)
keep$GIVEN_NAME <- toupper(keep$GIVEN_NAME)
keep$LAST_NAME <- toupper(keep$LAST_NAME)
keep$DOB <- parse_date_time(keep$DOB, "mdy")
rnfl$DOB <- parse_date_time(rnfl$DOB, "mdy")
keep$EYE <- gsub("RE", "OD", keep$EYE)
keep$EYE <- gsub("LE", "OS", keep$EYE)
keep$to_merge <- apply(keep[, c("GIVEN_NAME", "LAST_NAME","DOB", "EYE")], 1, function(x) paste(x, collapse = "_"))
keep <- keep %>% select(to_merge, colnames(keep)[1:102])
mac$to_merge <- apply(mac[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
mac <- mac %>% select(to_merge, colnames(mac)[1:95])
rnfl$to_merge <- apply(rnfl[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
rnfl <- rnfl %>% select(to_merge, colnames(rnfl)[1:74])
mac <- mac %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 978 eyes
rnfl <- rnfl %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 4980 eyes
library(writexl)
write_xlsx(list("Macula" = mac, "RNFL" = rnfl), "Merged_All_VF_LongData.xlsx")
keep_mac <- keep %>% filter(to_merge %in% mac$to_merge) %>% distinct()
keep_rnfl <- keep %>% filter(to_merge %in% rnfl$to_merge) %>% distinct()
keep_mac <- merge(keep_mac, mac[, 1:2])
keep_mac <- keep_mac %>% select(to_merge, ID, colnames(keep_mac)[2:103])
keep_rnfl <- merge(keep_rnfl, rnfl[, 1:2])
keep_rnfl <- keep_rnfl %>% select(to_merge, ID, colnames(keep_rnfl)[2:103])
keep_mac$VISIT_DATE <- parse_date_time(keep_mac$VISIT_DATE, "mdy")
keep_rnfl$VISIT_DATE <- parse_date_time(keep_rnfl$VISIT_DATE, "mdy")
keep_mac <- keep_mac %>% group_by(to_merge, ID) %>% arrange(VISIT_DATE)
keep_rnfl <- keep_rnfl %>% group_by(to_merge, ID) %>% arrange(VISIT_DATE)
keep_mac <- keep_mac %>% group_by(to_merge)
keep_rnfl <- keep_rnfl %>% group_by(to_merge)
keep_mac <- keep_mac %>% mutate(FOLLOW_UP = as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25)) %>% select(to_merge, ID, FOLLOW_UP, colnames(keep_mac)[3:104])
keep_rnfl <- keep_rnfl %>% mutate(FOLLOW_UP = as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25)) %>% select(to_merge, ID, FOLLOW_UP, colnames(keep_rnfl)[3:104])
keep_mac
keep_mac %>% distinct()
keep
keep %>% distinct()
keep_mac
keep_mac %>% distinct()
keep_rnfl <- keep_rnfl %>% distinct()
keep_mac <- keep_mac %>% distinct()
keep_rnfl %>% mutate(VISITS = n_distinct(VISIT_DATE)) %>% select(to_merge, ID, FOLLOW_UP, VISITS, colnames(keep_rnfl)[4:105]) %>% arrange(VISIT_DATE)
keep_rnfl %>% mutate(VISITS = n_distinct(VISIT_DATE)) %>% select(to_merge, ID, FOLLOW_UP, VISITS, colnames(keep_rnfl)[4:105]) %>% arrange(to_merge, VISIT_DATE)
keep_rnfl <- keep_rnfl %>% mutate(VISITS = n_distinct(VISIT_DATE)) %>% select(to_merge, ID, FOLLOW_UP, VISITS, colnames(keep_rnfl)[4:105]) %>% arrange(to_merge, VISIT_DATE)
keep_mac %>% mutate(VISITS = n_distinct(VISIT_DATE)) %>% select(to_merge, ID, FOLLOW_UP, VISITS, colnames(keep_mac)[4:105]) %>% arrange(to_merge, VISIT_DATE)
keep_mac <- keep_mac %>% mutate(VISITS = n_distinct(VISIT_DATE)) %>% select(to_merge, ID, FOLLOW_UP, VISITS, colnames(keep_mac)[4:105]) %>% arrange(to_merge, VISIT_DATE)
write_xlsx(list("Macula_VF" = keep_mac, "RNFL_VF" = keep_rnfl), "VF_ExtractedLongData.xlsx")
keep_rnfl
keep_rnfl %>% arrange(ID, VISIT_DATE)
library(tidyverse)
library(readxl)
mac <- read_excel("0503_LongitudinalData.xlsx",
sheet = "Macula")
rnfl <- suppressWarnings(read_excel("0503_LongitudinalData.xlsx",
sheet = "RNFL"))
keep <- read_csv("ALL_VF_EXAMS_HEADER_SS_242_302.csv")
mac$LAST_NAME <- toupper(mac$LAST_NAME)
rnfl$LAST_NAME <- toupper(rnfl$LAST_NAME)
mac$FIRST_NAME <- toupper(mac$FIRST_NAME)
rnfl$FIRST_NAME <- toupper(rnfl$FIRST_NAME)
keep$GIVEN_NAME <- toupper(keep$GIVEN_NAME)
keep$LAST_NAME <- toupper(keep$LAST_NAME)
keep$DOB <- parse_date_time(keep$DOB, "mdy")
rnfl$DOB <- parse_date_time(rnfl$DOB, "mdy")
keep$EYE <- gsub("RE", "OD", keep$EYE)
keep$EYE <- gsub("LE", "OS", keep$EYE)
keep$to_merge <- apply(keep[, c("GIVEN_NAME", "LAST_NAME","DOB", "EYE")], 1, function(x) paste(x, collapse = "_"))
keep <- keep %>% select(to_merge, colnames(keep)[1:102])
mac$to_merge <- apply(mac[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
mac <- mac %>% select(to_merge, colnames(mac)[1:95])
rnfl$to_merge <- apply(rnfl[, c("FIRST_NAME", "LAST_NAME", "DOB", "SITE")], 1, function(x) paste(x, collapse = "_"))
rnfl <- rnfl %>% select(to_merge, colnames(rnfl)[1:74])
mac <- mac %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 978 eyes
rnfl <- rnfl %>% filter(to_merge %in% keep$to_merge) %>% group_by(to_merge, SITE) %>% distinct() # 4980 eyes
library(writexl)
write_xlsx(list("Macula" = mac, "RNFL" = rnfl), "Merged_All_VF_LongData.xlsx")
keep_mac <- keep %>% filter(to_merge %in% mac$to_merge) %>% distinct()
keep_rnfl <- keep %>% filter(to_merge %in% rnfl$to_merge) %>% distinct()
keep_mac <- merge(keep_mac, mac[, 1:2])
keep_mac <- keep_mac %>% select(to_merge, ID, colnames(keep_mac)[2:103])
keep_rnfl <- merge(keep_rnfl, rnfl[, 1:2])
keep_rnfl <- keep_rnfl %>% select(to_merge, ID, colnames(keep_rnfl)[2:103])
keep_mac$VISIT_DATE <- parse_date_time(keep_mac$VISIT_DATE, "mdy")
keep_rnfl$VISIT_DATE <- parse_date_time(keep_rnfl$VISIT_DATE, "mdy")
keep_mac <- keep_mac %>% group_by(to_merge, ID) %>% arrange(VISIT_DATE)
keep_rnfl <- keep_rnfl %>% group_by(to_merge, ID) %>% arrange(VISIT_DATE)
keep_mac <- keep_mac %>% group_by(to_merge)
keep_rnfl <- keep_rnfl %>% group_by(to_merge)
keep_mac <- keep_mac %>% mutate(FOLLOW_UP = as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25)) %>% select(to_merge, ID, FOLLOW_UP, colnames(keep_mac)[3:104])
keep_rnfl <- keep_rnfl %>% mutate(FOLLOW_UP = as.numeric(difftime(VISIT_DATE, min(VISIT_DATE), units = "days")/365.25)) %>% select(to_merge, ID, FOLLOW_UP, colnames(keep_rnfl)[3:104])
keep_rnfl <- keep_rnfl %>% distinct()
keep_mac <- keep_mac %>% distinct()
keep_rnfl <- keep_rnfl %>% mutate(VISITS = n_distinct(VISIT_DATE)) %>% select(to_merge, ID, FOLLOW_UP, VISITS, colnames(keep_rnfl)[4:105]) %>% arrange(to_merge, VISIT_DATE)
keep_mac <- keep_mac %>% mutate(VISITS = n_distinct(VISIT_DATE)) %>% select(to_merge, ID, FOLLOW_UP, VISITS, colnames(keep_mac)[4:105]) %>% arrange(to_merge, VISIT_DATE)
keep_rnfl
keep_rnfl %>% group_by(to_merge) %>% summarize(n_distinct(ID))
keep_rnfl %>% group_by(to_merge) %>% mutate(HUH = n_distinct(ID)) %>% filter(HUH != 1)
rnfl %>% filter(to_merge == ARMIDA_ARELLANES_1941)
keep_rnfl %>% group_by(to_merge) %>% mutate(HUH = n_distinct(ID)) %>% filter(HUH != 1)
rnfl %>% filter(to_merge == "ARMIDA_ARELLANES_1941-05-04_OD")
keep_rnfl
keep_rnfl %>% count(to_merge)
keep_rnfl %>% summarize(COUNTS = count(to_merge))
keep_rnfl %>% summarize(COUNTS = n(to_merge))
keep_rnfl %>% summarize(COUNTS = n())
keep_rnfl %>% summarize(COUNTS = n(), VISITS)
keep_rnfl %>% summarize(COUNTS = n(), VISITS) %>% filter(COUNTS != VISITS)
keep_rnfl %>% mutate(COUNTS = n(), VISITS) %>% filter(COUNTS != VISITS)
library(tidyverse)
df <- read_csv("20231115_kaggle_cry_detection.csv")
tiredcry <- read.delim("tired_features_osm_affect.csv", sep=";", header = TRUE)
tiredcry[, 6376] <- rep("tired", 24)
bellypaincry <- read.delim("belly_pain_features_osm_affect.csv", sep=";", header = TRUE)
bellypaincry[, 6376] <- rep("pain", 17)
hungrycry <- read.delim("hungry_features_osm_affect.csv", sep=";", header = TRUE)
hungrycry[, 6376] <- rep("hungry", 382)
discomfortcry <- read.delim("discomfort_features_osm_affect.csv", sep=";", header = TRUE)
discomfortcry[, 6376] <- rep("discomfort", 27)
burpingcry <- read.delim("burping_features_osm_affect.csv", sep=";", header = TRUE)
burpingcry[, 6376] <- rep("burp", 8)
allcries <- rbind(bellypaincry[-17,], burpingcry, discomfortcry, hungrycry, tiredcry)
allcries
allcries$class
allcries
colnames(allcries)
allcries[, 6376]
unique(allcries[, 6376])
allcries
colnames(allcries)[6376] <- "class"
allcries
df
df %>% filter(prediction == "crynoises")
df <- df %>% filter(prediction == "crynoises") %>% distinct()
allcries
intersect(allcries, df)
intersect(colnames(allcries), colnames(df))
allcries
df
burpingcry
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(car)
library(corrplot)
library(randomForest)
babycry <- read.csv("20231115_kaggle_cry_detection.csv")
rm(list = ls())
library(tidyverse)
df <- read_csv("20231115_kaggle_cry_detection.csv")
tiredcry <- read.delim("tired_features_osm_affect.csv", sep=";", header = TRUE)
tiredcry[, 6376] <- rep("tired", 24)
bellypaincry <- read.delim("belly_pain_features_osm_affect.csv", sep=";", header = TRUE)
bellypaincry[, 6376] <- rep("pain", 17)
hungrycry <- read.delim("hungry_features_osm_affect.csv", sep=";", header = TRUE)
hungrycry[, 6376] <- rep("hungry", 382)
discomfortcry <- read.delim("discomfort_features_osm_affect.csv", sep=";", header = TRUE)
discomfortcry[, 6376] <- rep("discomfort", 27)
burpingcry <- read.delim("burping_features_osm_affect.csv", sep=";", header = TRUE)
burpingcry[, 6376] <- rep("burp", 8)
allcries <- rbind(bellypaincry[-17,], burpingcry, discomfortcry, hungrycry, tiredcry)
colnames(allcries)[6376] <- "class"
df <- df %>% filter(prediction == "crynoises") %>% distinct()
nojunkcries <- allcries[df$prediction=="crynoises", ]
nojunkcries <- nojunkcries %>% select(colnames(nojunkcries)[6376], colnames(nojunkcries)[1:6375])
rownames(nojunkcries) <- NULL
colnames(nojunkcries)[1] <- "class"
library(psych)    # For EFA and parallel analysis
install.packages("psych")
library(psych)    # For EFA and parallel analysis
library(FactoMineR) # For PCA
install.packages("FactoMineR")
install.packages("FactoMineR")
install.packages("FactoMineR")
install.packages("FactoMineR")
predictors <- nojunkcries[, setdiff(names(nojunkcries), "class")]
predictors
pa <- fa.parallel(predictors, fa="both", n.iter=100)
pa <- fa.parallel(predictors, fa="both", n.iter=100)
efa_result <- fa(r = cor(predictors), nfactors = 2, rotate = "varimax")
library(psych)    # For EFA and parallel analysis
predictors <- nojunkcries[, setdiff(names(nojunkcries), "class")]
efa_result <- fa(r = cor(predictors), nfactors = 2, rotate = "varimax")
rm(list = ls())
rm(list = ls())
library(tidyverse)
df_year <- read_csv("EV vs. GV by Year.csv")
df <- read_csv("EV Chargers.csv")
df_ev <- df_year %>% filter(Type == "Electric")
library(ggplot2)
library(dplyr)
library(minpack.lm)
library(scales)
df_ev$Year <- as.numeric(as.character(df_ev$Year)) - 2000
sigmoid_model <- nlsLM(Count ~ L / (1 + exp(-k * (Year - x0))),
data = df_ev,
start = list(L = max(df_ev$Count, na.rm = TRUE), k = 0.01, x0 = mean(df_ev$Year, na.rm = TRUE)),
control = nls.lm.control(maxiter = 200))  # Increase max iterations
year_range <- seq(min(df_ev$Year), 2035 - 2000, by = 1)  # Scale the years similarly
df_predict <- data.frame(Year = year_range)
df_predict$Count_Predicted <- predict(sigmoid_model, newdata = df_predict)
min_count <- min(df_ev$Count, na.rm = TRUE)
buffer <- min_count * 0.1
ggplot(df_ev, aes(x = Year + 2000, y = Count)) +
geom_point() +
geom_line(data = df_predict, aes(x = Year + 2000, y = Count_Predicted), color = "black") +
labs(title = "Number of EVs in LA County Projections to 2035", x = "Year", y = "Total Number of EVs") +
scale_y_continuous(labels = label_number(), limits = c(min_count - buffer, NA)) +
theme_minimal()
df <- read_csv("EV Chargers.csv")
df$Year <- as.numeric(df$Year - 2000)
colnames(df)[3:8] <- c("Level_1_Public", "Level_1_Shared_Private", "Level_2_Public", "Level_2_Shared_Private",
"DC_Fast_Public", "DC_Fast_Shared_Private")
sigmoid_model_2 <- nlsLM(Level_1_Public ~ L / (1 + exp(-k * (Year - x0))),
data = df,
start = list(L = max(df$Level_1_Public, na.rm = TRUE), k = 0.1, x0 = mean(df$Year, na.rm = TRUE)),
control = nls.lm.control(maxiter = 200))
sigmoid_model_3 <- nlsLM(Level_1_Shared_Private ~ L / (1 + exp(-k * (Year - x0))),
data = df,
start = list(L = max(df$Level_1_Shared_Private, na.rm = TRUE), k = 0.1, x0 = mean(df$Year, na.rm = TRUE)),
control = nls.lm.control(maxiter = 200))
sigmoid_model_4 <- nlsLM(Level_2_Public ~ L / (1 + exp(-k * (Year - x0))),
data = df,
start = list(L = max(df$Level_2_Public, na.rm = TRUE), k = 0.1, x0 = mean(df$Year, na.rm = TRUE)),
control = nls.lm.control(maxiter = 200))
sigmoid_model_5 <- nlsLM(Level_2_Shared_Private ~ L / (1 + exp(-k * (Year - x0))),
data = df,
start = list(L = max(df$Level_2_Shared_Private, na.rm = TRUE), k = 0.1, x0 = mean(df$Year, na.rm = TRUE)),
control = nls.lm.control(maxiter = 200))
sigmoid_model_6 <- nlsLM(DC_Fast_Public ~ L / (1 + exp(-k * (Year - x0))),
data = df,
start = list(L = max(df$DC_Fast_Public, na.rm = TRUE), k = 0.1, x0 = mean(df$Year, na.rm = TRUE)),
control = nls.lm.control(maxiter = 200))
sigmoid_model_7 <- nlsLM(DC_Fast_Shared_Private ~ L / (1 + exp(-k * (Year - x0))),
data = df,
start = list(L = max(df$DC_Fast_Shared_Private, na.rm = TRUE), k = 0.1, x0 = mean(df$Year, na.rm = TRUE)),
control = nls.lm.control(maxiter = 200))
year_range <- seq(min(df$Year, na.rm = TRUE), 2035 - 2000, by = 1)
df_predict <- data.frame(Year = year_range)
df_predict$Total_Predicted <- predict(sigmoid_model, newdata = df_predict)
df_predict$Level_1_Public_Predicted <- predict(sigmoid_model_2, newdata = df_predict)
df_predict$Level_1_Shared_Private_Predicted <- predict(sigmoid_model_3, newdata = df_predict)
df_predict$Level_2_Public_Predicted <- predict(sigmoid_model_4, newdata = df_predict)
df_predict$Level_2_Shared_Private_Predicted <- predict(sigmoid_model_5, newdata = df_predict)
df_predict$DC_Fast_Public_Predicted <- predict(sigmoid_model_6, newdata = df_predict)
df_predict$DC_Fast_Shared_Private_Predicted <- predict(sigmoid_model_7, newdata = df_predict)
ggplot(df, aes(x = Year + 2000, y = Total)) +
geom_line(data = df_predict, aes(x = Year + 2000, y = Level_1_Public_Predicted, color = "Level 1 Public Predicted")) +
geom_line(data = df_predict, aes(x = Year + 2000, y = Level_1_Shared_Private_Predicted, color = "Level 1 Shared Private Predicted")) +
geom_line(data = df_predict, aes(x = Year + 2000, y = Level_2_Public_Predicted, color = "Level 2 Public Predicted")) +
geom_line(data = df_predict, aes(x = Year + 2000, y = Level_2_Shared_Private_Predicted, color = "Level 2 Shared Private Predicted")) +
geom_line(data = df_predict, aes(x = Year + 2000, y = DC_Fast_Public_Predicted, color = "DC Fast Public Predicted")) +
geom_line(data = df_predict, aes(x = Year + 2000, y = DC_Fast_Shared_Private_Predicted, color = "DC Fast Shared Private Predicted")) +
labs(title = "Number of EV Chargers in LA County Projections to 2035", x = "Year", y = "Total Number of EV Chargers") +
scale_y_continuous(labels = scales::label_number(), limits = c(0, NA)) +
scale_color_manual(values = c("Level 1 Public Predicted" = "blue", "Level 1 Shared Private Predicted" = "lightgreen",
"Level 2 Public Predicted" = "purple", "Level 2 Shared Private Predicted" = "red",
"DC Fast Public Predicted" = "gold", "DC Fast Shared Private Predicted" = "pink"),
name = "Charger Type Predictions", labels = c("DC Fast Public", "DC Fast Shared Private",
"Level 1 Public", "Level 1 Shared Private",
"Level 2 Public", "Level 2 Shared Private")) +
theme_minimal()
